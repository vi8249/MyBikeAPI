// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouBikeAPI.Data;

namespace YouBikeAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YouBikeAPI.Models.Bike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("BikeStationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BikeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<bool>("Rented")
                        .HasColumnType("bit");

                    b.Property<decimal>("Revenue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BikeStationId");

                    b.HasIndex("BikeType");

                    b.ToTable("Bikes");
                });

            modelBuilder.Entity("YouBikeAPI.Models.BikeStation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BikesInsideParkingLot")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("StationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalParkingSpace")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BikeStations");
                });

            modelBuilder.Entity("YouBikeAPI.Models.Price", b =>
                {
                    b.Property<string>("BikeType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.HasKey("BikeType");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("YouBikeAPI.Models.Bike", b =>
                {
                    b.HasOne("YouBikeAPI.Models.BikeStation", null)
                        .WithMany("AvailableBikes")
                        .HasForeignKey("BikeStationId");

                    b.HasOne("YouBikeAPI.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("BikeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Price");
                });

            modelBuilder.Entity("YouBikeAPI.Models.BikeStation", b =>
                {
                    b.Navigation("AvailableBikes");
                });
#pragma warning restore 612, 618
        }
    }
}
